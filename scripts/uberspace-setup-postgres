#!/bin/bash
# Download, compile and setup Postgresql

install_dir=~/postgres
version=12.2

source_dir=postgresql-${version}
download_path=https://download.postgresql.org/pub/source/v${version}/${source_dir}.tar.gz

host=localhost
port=5432

# Download and extract source
printf "ðŸ”·  Downloading source code...\n"
mkdir $install_dir
cd $install_dir
curl -O $download_path
tar -xvzf ${source_dir}.tar.gz
printf "\nâœ…  Done!\n"

# Compile (including man pages and HTML docs)
printf "\n\nðŸ”·  Compile...\n"
cd $source_dir
./configure --prefix=$HOME/opt/postgresql/
make world
make install-world
printf "\nâœ…  Done!\n"

# Update bash profile
printf "\n\nðŸ”·  Update bash profile...\n"

cat <<EOT >> ~/.bash_profile
# Postgresql environment
export PATH=$HOME/opt/postgresql/bin/:$PATH
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/opt/postgresql/lib
export PGPASSFILE=$HOME/.pgpass
EOT

source ~/.bash_profile
printf "\nâœ…  Done!\n"

# Setup Postgres user
printf "\n\nðŸ”·  Setup Postgres user...\n"
pw=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 64)
cat <<EOT >> ~/.pgpass
# hostname:port:database:username:password (min 64 characters)
*:*:*:$(whoami):${pw}
EOT
chmod 0600 ~/.pgpass
printf "\nâœ…  Done!\n"

# Create database cluster
printf "\n\nðŸ”·  Setup database cluster...\n"
echo $pw > ~/pgpass.temp
initdb --pwfile ~/pgpass.temp --auth=md5 -E UTF8 -D ~/opt/postgresql/data/
rm ~/pgpass.temp
printf "\nâœ…  Done!\n"

# Setup host and port
printf "\n\nðŸ”·  Setup host and port...\n"
cat <<EOT >> ~/.bashrc
export PGHOST=${host}
export PGPORT=${port}
EOT
source ~/.bashrc
printf "\nâœ…  Done!\n"

# Adjust configuration
printf "\n\nðŸ”·  Adjust configuration..\n"
config_file=~/opt/postgresql/data/postgresql.conf
sed -i "/#unix_socket_directories.*/iunix_socket_directories = '/home/$(whoami)/tmp'" $config_file
printf "\nâœ…  Done!\n"

# Setup service
printf "\n\nðŸ”·  Setup service...\n"
cat <<EOT >> ~/etc/services.d/postgresql.ini
[program:postgresql]
command=%(ENV_HOME)s/opt/postgresql/bin/postgres -D %(ENV_HOME)s/opt/postgresql/data/
autostart=yes
autorestart=yes
EOT
supervisorctl reread
supervisorctl update
printf "\nâœ…  Done!\n"

# Installation summary
printf "\n\nâœ…  Summary\n"
printf "Version: $(psql --version)\n"
printf "Root Contributor: $(whoami)\n"
printf "Running on ${host}:${port}\n"
