#!/bin/bash

# This script deploys the application via rsync over SSH, only uploading
# files that have changed since the last deployment.
#
# `DEPLOY_USER`
#    User account used to connect via SSH to the web server
#
# `DEPLOY_TARGET`
#    Host of the production server
#
# `DEPLOY_DRY_RUN`
#    Set to `true` to run without actually changing anything, only displaying
#    a list of changes that would be made during a real deployment

# Exit with error code if any command fails
set -e

# Check if called inside of a rails root directory
if [[ ! -f "./bin/rails" ]]; then
  echo "Switch to the root directory of a Rails project to deploy!"
  exit 1
fi

# Check if $RAILS_ENV is set
if [[ -z ${RAILS_ENV+x} ]]; then
  echo "Set RAILS_ENV in order to deploy!"
  exit 1
fi

deploy_exclude="scripts/deploy-exclude"
deploy_include="scripts/deploy-include"
deploy_path="~/100eyes"

# Upload changes using rsync. Only files that match a pattern whitelisted
# in `scripts/deploy-include` will be uploaded
#
# --checksum
#   enables comparision via checksums instead of the default comparison
#   method (date and size), as those might differ between CI servers and
#   production servers.
#
# --delete
#   enable deletion of files that are present on the production server but
#   not in the current source files anymore.

rsync_args=(
  --checksum
  --delete
  --recursive
  --links
  --compress
  --human-readable
  --info=name1,stats2
  --exclude-from=$deploy_exclude
  --include-from=$deploy_include
  --exclude='*'
)

# Add dry run flag
if [[ -n ${DEPLOY_DRY_RUN+x} ]]; then
    rsync_args+=(--dry-run)
fi

rsync ${rsync_args[@]} "./" "$DEPLOY_USER@$DEPLOY_TARGET:$deploy_path"

# No need to run the following commands in case of a dry run
if [[ -n ${DEPLOY_DRY_RUN+x} ]]; then
  exit 0
fi

# Restart services, run migrations, install ruby dependencies
ssh $DEPLOY_USER@$DEPLOY_TARGET \
  "cd $deploy_path &&" \
  "BUNDLE_PATH=vendor/bundle bundle install --without development test &&" \
  "RAILS_ENV=$RAILS_ENV SECRET_KEY_BASE=$SECRET_KEY_BASE bin/rake db:prepare &&" \
  "supervisorctl restart 100eyes &&" \
  "supervisorctl restart 100eyes-telegram-bot-poller"
